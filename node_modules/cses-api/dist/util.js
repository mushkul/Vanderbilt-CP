"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readJsonSync = exports.writeFile = exports.readFile = exports.mkdirs = exports.dirname = exports.isNumber = exports.extractLast = exports.extract = void 0;
function extract(str, afterSubstring, beforeString) {
    let start = str.indexOf(afterSubstring) + afterSubstring.length;
    if (start === -1)
        throw `Can't find ${afterSubstring} in ${str}`;
    let end = str.indexOf(beforeString, start);
    if (end === -1)
        throw `Can't find ${beforeString} in ${str}`;
    return str.slice(start, end);
}
exports.extract = extract;
function extractLast(str, afterSubstring, beforeString) {
    let start = str.lastIndexOf(afterSubstring) + afterSubstring.length;
    if (start === -1)
        throw `Can't find ${afterSubstring} in ${str}`;
    let end = str.indexOf(beforeString, start);
    if (end === -1)
        throw `Can't find ${beforeString} in ${str}`;
    return str.slice(start, end);
}
exports.extractLast = extractLast;
function isNumber(num) {
    return num == +num;
}
exports.isNumber = isNumber;
// const require = createRequire(import.meta.url)
const commonJsModule = require("fs-extra");
const url_1 = require("url");
const path_1 = __importDefault(require("path"));
function dirname(base, ...paths) {
    return path_1.default.join(path_1.default.dirname((0, url_1.fileURLToPath)(base)), ...paths);
}
exports.dirname = dirname;
exports.mkdirs = commonJsModule.mkdirs;
exports.readFile = commonJsModule.readFile;
exports.writeFile = commonJsModule.writeFile;
exports.readJsonSync = commonJsModule.readJsonSync;
