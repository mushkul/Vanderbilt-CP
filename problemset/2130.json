{"Title": "Distinct Routes II", "Category": "Advanced Techniques", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "A game consists of n rooms and m teleporters. At the beginning of each day, you start in room 1 and you have to reach room n. \n You can use each teleporter at most once during the game. You want to play the game for exactly k days. Every time you use any teleporter you have to pay one coin. What is the minimum number of coins you have to pay during k days if you play optimally? \n", "Input Specification": "\n The first input line has three integers n, m and k: the number of rooms, the number of teleporters and the number of days you play the game. The rooms are numbered 1,2,\\dots,n. \n After this, there are m lines describing the teleporters. Each line has two integers a and b: there is a teleporter from room a to room b. \n There are no two teleporters whose starting and ending room are the same. \n", "Output Specification": "\n First print one integer: the minimum number of coins you have to pay if you play optimally. Then, print k route descriptions according to the example. You can print any valid solution. \n If it is not possible to play the game for k days, print only -1. \n", "Constraints": "2 \\le n \\le 500\n1 \\le m \\le 1000\n1 \\le k \\le n-1\n1 \\le a,b \\le n", "Example Input": "8 10 2\n1 2\n1 3\n2 5\n2 4\n3 5 \n3 6\n4 8\n5 8\n6 7 \n7 8", "Example Output": "6\n4\n1 2 4 8 \n4\n1 3 5 8", "Number": 2130}