{"Title": "Swap Round Sorting", "Category": "Additional Problems", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "You are given an array containing a permutation of numbers 1,2,\\dots,n, and your task is to sort the array using swap rounds. On each swap round, you can choose any number of distinct pairs of elements and swap each pair. \n Your task is to find the minimum number of rounds and show how you can choose the pairs in each round. \n", "Input Specification": "\n The first input line has an integer n: the size of the array. \n The second line has n integers x_1,x_2,\\dots,x_n: the initial permutation. \n", "Output Specification": "\n First print an integer k: the minimum number of rounds. \n Then, for each round, print the number of swaps and the indices of each swap. You can print any valid solution. \n", "Constraints": "1 \\le n \\le 2 \\cdot 10^5", "Example Input": "5\n5 2 1 3 4", "Example Output": "2\n2\n1 3\n4 5\n1\n3 5", "Number": 1698}