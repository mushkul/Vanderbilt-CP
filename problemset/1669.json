{"Title": "Round Trip", "Category": "Graph Algorithms", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "Byteland has n cities and m roads between them. Your task is to design a round trip that begins in a city, goes through two or more other cities, and finally returns to the starting city. Every intermediate city on the route has to be distinct. \n", "Input Specification": "\n The first input line has two integers n and m: the number of cities and roads. The cities are numbered 1,2,\\dots,n. \n Then, there are m lines describing the roads. Each line has two integers a and b: there is a road between those cities. \n Every road is between two different cities, and there is at most one road between any two cities. \n", "Output Specification": "\n First print an integer k: the number of cities on the route. Then print k cities in the order they will be visited. You can print any valid solution. \n If there are no solutions, print \"IMPOSSIBLE\". \n", "Constraints": "1 \\le n \\le 10^5\n1 \\le m \\le 2 \\cdot 10^5\n1 \\le a,b \\le n", "Example Input": "5 6\n1 3\n1 2\n5 3\n1 5\n2 4\n4 5", "Example Output": "4\n3 5 1 3", "Number": 1669}