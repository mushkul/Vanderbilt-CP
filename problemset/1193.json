{"Title": "Labyrinth", "Category": "Graph Algorithms", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "You are given a map of a labyrinth, and your task is to find a path from start to end. You can walk left, right, up and down. \n", "Input Specification": "\n The first input line has two integers n and m: the height and width of the map. \n Then there are n lines of m characters describing the labyrinth. Each character is . (floor), # (wall), A (start), or B (end). There is exactly one A and one B in the input. \n", "Output Specification": "\n First print \"YES\", if there is a path, and \"NO\" otherwise. \n If there is a path, print the length of the shortest such path and its description as a string consisting of characters L (left), R (right), U (up), and D (down). You can print any valid solution. \n", "Constraints": "1 \\le n,m \\le 1000", "Example Input": "5 8\n########\n#.A#...#\n#.##.#B#\n#......#\n########", "Example Output": "YES\n9\nLDDRRRRRU", "Number": 1193}