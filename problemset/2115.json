{"Title": "Bit Substrings", "Category": "Additional Problems", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "You are given a bit string of length n. Your task is to calculate for each k between 0  \\ldots n the number of non-empty substrings that contain exactly k ones. \n For example, if the string is 101, there are: \n \n1 substring that contains 0 ones: 0\n4 substrings that contain 1 one: 01, 1, 1, 10\n1 substring that contains 2 ones: 101\n0 substrings that contain 3 ones\n \n", "Input Specification": "\n The only input line contains a binary string of length n. \n", "Output Specification": "\n Print n+1 values as specified above. \n", "Constraints": "1 \\le n \\le 2 \\cdot 10^5", "Example Input": "101", "Example Output": "1 4 1 0", "Number": 2115}