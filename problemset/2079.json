{"Title": "Finding a Centroid", "Category": "Tree Algorithms", "Time Limit": "1.00 s", "Memory Limit": "512 MB", "Description": "Given a tree of n nodes, your task is to find a centroid, i.e., a node such that when it is appointed the root of the tree, each subtree has at most \\lfloor n/2 \\rfloor nodes. \n", "Input Specification": "\n The first input line contains an integer n: the number of nodes. The nodes are numbered 1,2,\u2026,n. \n Then there are n-1 lines describing the edges. Each line contains two integers a and b: there is an edge between nodes a and b. \n", "Output Specification": "\n Print one integer: a centroid node. If there are several possibilities, you can choose any of them. \n", "Constraints": "1 \\le n \\le 2 \\cdot 10^5\n1 \\le a,b \\le n", "Example Input": "5\n1 2\n2 3\n3 4\n3 5", "Example Output": "3", "Number": 2079}